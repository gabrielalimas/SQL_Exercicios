-- COMANDO NULL E ISNULL --
--NO NOSSO BANCO DE DADOS DA EMPRESA FOKUS, VAMOS FILTRAR NA TABELA HISTORICO EMPREGO OS 5 MAIORES SALARIOS DA EMPRESA --
SELECT * FROM HistoricoEmprego
ORDER BY salario DESC
LIMIT 5;

-- AGORA, FILTRANDO SOMENTE AQUELES EM QUE A DATA TERMINO É NULA, OU SEJA, AQUELES QUE AINDA TRABALHAM NA EMPRESA --
SELECT * FROM HistoricoEmprego
WHERE datatermino isNULL
ORDER BY salario DESC
LIMIT 5;

-- AGORA, FILTRANDO SOMENTE AQUELES EM QUE A DATA TERMINO NÃO É NULA, OU SEJA, AQUELES QUE JÁ NÃO ESTÃO MAIS TRABALHANDO NA EMPRESA --
SELECT * FROM HistoricoEmprego
WHERE datatermino NOTNULL
ORDER BY salario DESC
LIMIT 5;

-- COMANDO LIKE --
-- PRECISAMOS BUSCAR NA LISTA UM TREINAMENTO ONDE SÓ TEMOS PARTE DO NOME, NÃO O NOME TODO --
SELECT * FROM Treinamento
WHERE curso LIKE 'O poder%'; -- NESSE CASO, A PORCENTAGEM SERVE PARA INDICAR QUE TEMOS MAIS COISAS ESCRITAS DEPOIS DE 'O PODER' --

-- AGORA, BUSCANDO NA LISTA UM TREINAMENTO ONDE SÓ TEMOS A PALAVRA DO MEIO DO NOME DO CURSO --
SELECT * FROM Treinamento
WHERE curso like '%realizar%'; -- NESSE CASO, A PORCENTAGEM SERVE PARA INDICAR QUE ESSA PALAVRA ESTÁ NO MEIO DA FRASE'Colaboradores

-- AGORA, QUEREMOS BUSCAR AS INFORMAÇÕES DE UMA FUNCIONÁRIA, PORÉM, SÓ TEMOS O PRIMEIRO NOME DELA, QUE É ISADORA --
SELECT * FROM Colaboradores
WHERE nome LIKE 'Isadora%';


-- COMANDOS AND, OR, IN E NOT --
-- USAREMOS O COMANDO NOT NULL PARA BUSCAR O COLABORADOR QUE É PROFESSOR E ESTÁ COM O CONTRATO ENCERRADO, PARA QUE POSSAM OFERECER OUTRA VAGA PARA ELE --
SELECT * FROM HistoricoEmprego
WHERE cargo = 'Professor' AND
datatermino NOT NULL;

-- TRAZER OS PROFISSIONAIS CADASTRADOS COMO OFTALMOLOGISTA E DERMATOLOGISTA. NÃO IMPORTA SE ESTÃO TRABALHANDO OU NÃO --
SELECT * FROM HistoricoEmprego
WHERE cargo = 'Oftalmologista' OR cargo = 'Dermatologista';

-- AGORA É NECESSÁRIO FILTRAR TODOS OS DERMATOLOGISTAS OU OFTALMOLOGISTAS OU PROFESSORES --
SELECT * FROM HistoricoEmprego
WHERE cargo IN ('Dermatologista', 'Oftalmologista', 'Professor');

-- AGORA É NECESSÁRIO NÃO TRAZER DETERMINADAS INFORMAÇÕES. POR EXEMPLO, AGORA QUEREMOS INFORMAÇÕES DE PESSOAS DOS TODOS OS CARGOS, EXCETO: DERMATOLOGISTAS, OFTALMOLOGISTAS E PROFESSORES. --
SELECT * FROM HistoricoEmprego
WHERE cargo NOT IN ('Dermatologista', 'Oftalmologista', 'Professor');


-- UTILIZANDO DIVERSOS OPERADORES --
-- AGORA É NECESSÁRIO ENCONTRAR 2 CURSOS ESPECIFICOS DA TABELA DE TREINAMENTO, DE UMA INSTITUIÇÃO ESPECIFICA, ONDE NÃO SE TEM OS DADOS COMPLETOS DE CADA CURSO, E SIM, O PRIMEIRO NOME DE CADA CURSO E O NOME DA INSTITUIÇÃO.--
SELECT * FROM Treinamento
WHERE (curso LIKE 'O direito%' AND instituicao = 'da Rocha')
OR (curso like 'O conforto%' AND instituicao = 'das Neves');


-- FUNÇÕES DE AGREGAÇÃO - MAX, MIN E SUM --
-- MAX --
-- AQUI É PARA ENCONTRAR O MAIOR VALOR DE FATURAMENTO --
SELECT mes, MAX(faturamento_bruto) from faturamento;

-- MIN --
--AQUI É PARA ENCONTRAR O MENOR VALOR DE FATURAMENTO --
SELECT mes, MIN(faturamento_bruto) from faturamento;

-- SUM --
-- AQUI É PARA SOMAR TODOS OS NOVOS CLIENTES NO ANO DE 2023 --
SELECT SUM(numero_novos_clientes) as 'Novos clientes 2023' FROM faturamento
WHERE mes LIKE '%2023';

-- FUNÇÕES DE AGREGAÇÃO - COUNT E AVG --
-- AVG (MÉDIA) --
-- AQUI, VAMOS CALCULAR A MÉDIA DAS DESPESAS --
SELECT AVG(despesas) FROm faturamento;

-- AQUI VAMOS CALCULAR A MÉDIA DO LUCRO LIQUIDO --
SELECT AVG(lucro_liquido) FROM faturamento;

-- COUNT --
-- CONTAR QUANTOS COLABORADORES ESTÃO DESEMPREGADOS --
select count(*) from HistoricoEmprego -- O * É PARA CONTAR TODOS OS REGISTROS DA TABELA QUE ESTÃO DENTRO DA CONDIÇÃO INFORMADA --
where datatermino NOTNULL;

-- CONTAR QUANTAS PESSOAS ESTÃO DE FÉRIAS --
SELECT COUNT(*) FROM Licencas
WHERE tipolicenca = 'férias';

-- GROUP BY --
-- AQUI, VAMOS CONTAR QUANTAS PESSOAS TEM ALGUM TIPO DE DEPENDENTE --
SELECT parentesco FROM Dependentes
GROUP BY parentesco;

-- CONTANDO QUANTOS DEPENDENTES EXISTEM --
SELECT parentesco, COUNT(*) FROM Dependentes
GROUP BY parentesco;

-- QUEREMOS SABER A QUANTIDADE DE CURSOS POR INSTITUIÇÃO --
SELECT instituicao, COUNT(curso)
FROM TREINAMENTO 
GROUP BY instituicao;

-- CLAUSULA HAVING --
-- ESSA CLAUSULA FAZ A MESMA COISA QUE A CLAUSULA WHERE, PORÉM, ELA É USADA PARA CRIAR CONDIÇÕES PARA VALORES AGRUPADOS. ENTÃO, POR EXEMPLO, QUANDO VOCÊ USAR O GROUP BY E DEPOIS PRECISAR CRIAR ALGUMA CONDIÇÃO DEPOIS DISSO, PODE USAR O HAVING --
-- AQUI, FIZEMOS A MESMA BUSCA QUE ANTERIORMENTE, PORÉM, AGORA QUEREMOS QUE SÓ TRAGA AS INSTITUIÇÕES QUE TEM MAIS DE 2 CURSOS --
SELECT instituicao, COUNT(curso)
FROM Treinamento
GROUP BY instituicao
HAVING COUNT(curso) > 2;

-- AQUI, QUEREMOS SABER OS CARGOS E A QUANTIDADE DE PESSOAS NESSES CARGOS, AGRUPANDO A QUANTIDADE POR CARGO, ONDE SÓ TRAGA OS CARGOS QUE TENHAM 2 OU MAIS PESSOAS --
SELECT cargo, COUNT(*) qtd
FROM HistoricoEmprego
group by cargo
HAVING qtd >= 2;

-- TRABALHANDO COM FUNÇÕES DE STRING --
-- FUNÇÃO LENGTH QUE SERVE PARA CONTAR QUAL O COMPRIMENTO DA STRING DE UM CAMPO ESPECIFICO --
-- AGORA, QUEREMOS SABER SE OS CPFs CADASTRADOS POSSUEM 11 NUMEROS. SABEMOS QUE TEMOS 150 COLABORADORES CADASTRADOS, ENTÃO, VAMOS USAR O COUNT PARA SABER QUANTAS PESSOAS DESSAS 150 ESTÃO COM O CPF CADASTRADO COM 11 NÚMEROS --
SELECT COUNT(*), LENGTH(cpf) qtd
FROM Colaboradores
WHERE qtd = 11;

-- AGORA PRECISAMOS VER OS DADOS DAS PESSOAS DE UMA FORMA MAIS DINAMICA, SEM SER UM FORMATO TABELA, UM FORMATO TIPO TEXTO --
SELECT ('A pessoa colaboradora ' || nome || ' de cpf ' || cpf || ' possui o seguinte endereço: '|| endereco) as texto from Colaboradores; -- USAMOS O || PARA FAZER CONCATENAÇÃO DE TEXTO.

-- AQUI, USANDO A FUNÇÃO UPPER, ELA MUDA OS CARACTERES DO TEXTO PARA MAIÚSCULO --
SELECT UPPER ('A pessoa colaboradora ' || nome || ' de cpf ' || cpf || ' possui o seguinte endereço: '|| endereco) as texto from Colaboradores;

-- AQUI, USANDO A FUNÇÃO LOWER, ELA MUDA OS CARACTERES DO TEXTO PARA MINÚSCULO --
SELECT LOWER ('A pessoa colaboradora ' || nome || ' de cpf ' || cpf || ' possui o seguinte endereço: '|| endereco) as texto from Colaboradores;

-- FUNÇÕES DE DATA --
-- FUNÇÃO STRFTIME: SERVE PARA ALTERAR O FORMATO DA DATA --
-- VAMOS TRAZER SOMENTE O MÊS E ANO DA DATA DE INÍCIO DAS PESSOAS QUE ESTÃO COM ALGUM TIPO DE LICENÇA --
SELECT id_colaborador, STRFTIME('%Y/%m', datainicio) FROM Licencas;

-- PRECISAMOS TRAZER O INTERVALO DE TEMPO QUE A PESSOA TRABALHOU NA EMPRESA --
-- JULIANDAY: CALCULAR O INTERVALO DE TEMPO --
-- NUNCA ESQUECER DE COLOCAR UMA CONDIÇÃO (WHERE). NESSE CASO, NÃO QUEREMOS QUE ELE CONSIDERE QUEM TEM A DATA TERMINO NULA, PORQUE NESSE CASO, A PESSOA AINDA ESTÁ TRABALHANDO NA EMPRESA.--
SELECT id_colaborador, JULIANDAY (datatermino) - JULIANDAY(datacontratacao) FROM HistoricoEmprego WHERE datatermino IS NOT NULL;

-- FUNÇÕES NUMÉRICAS --
-- ARREDONDAR NÚMEROS --
-- ABAIXO VAMOS USAR A FUNÇÃO ROUND, ONDE ELA FAZ O ARREDONDAMENTO DOS NÚMEROS PARA UM NÚMERO ESPECIFICO DE CASAS DECIMAIS. ALÉM DO ARREDONDAMENTO, FAREMOS O CÁLCULO DA MÉDIA --
SELECT AVG(faturamento_bruto), ROUND(AVG(faturamento_bruto),2) FROM faturamento;

-- FUNÇÃO CEIL: FAZ O ARREDONDAMENTO PARA CIMA, PARA O NÚMERO INTEIRO SEGUINTE --
SELECT CEIL(faturamento_bruto), CEIL(despesas) FROM faturamento;

-- FUNÇÃO FLOOR: FAZ O ARREDONDAMENTO PARA BAIXO, PARA O NÚMERO INTEIRO SEGUINTE --
SELECT FLOOR(faturamento_bruto), FLOOR(despesas) FROM faturamento;

-- FUNÇÕES DE CONVERSÃO --
-- FUNÇÃO CAST: ELA CONVERTE O TIPO/FORMATO DA INFORMAÇÃO. --
-- AQUI, VAMOS PRECISAR FAZER UMA CONCATENAÇÃO DE STRING COM A MÉDIA DE FATURAMENTO. SÃO 2 TIPOS DE INFORMAÇÃO DIFERENTES. USAREMOS A FUNÇÃO CAST --
SELECT ('O faturamento bruto médio foi ' || CAST(ROUND (AVG(faturamento_bruto),2) AS TEXT)) FROM faturamento;

-- FUNÇÃO CASE --
-- A FUNÇÃO CASE SERVE PARA CRIAR CONDIÇÕES DETERMINANDO QUE, CASO UMA CONDIÇÃO ESPECÍFICA SEJA ATENDIDA, O RESULTADO DEVE VIR DE UMA FORMA, SE FOR OUTRA CONDIÇÃO, VEM DE OUTRA FORMA. --
-- AQUI, PRECISAMOS SEPARAR OS SALÁRIOS DOS COLABORADORES PELA FAIXA SALARIAL, PARA SE TER UMA MÉDIA SALARIAL POR TIPO DE PROFISSÃO --
SELECT id_colaborador, cargo, salario,
CASE
  WHEN salario < 3000 THEN 'Baixo'
  WHEN salario BETWEEN 3000 AND 6000 THEN 'Médio'
  ELSE 'Alto'
  END as categoria_salario
from HistoricoEmprego;

-- RENOMEANDO COM A CLAUSULA RENAME --
-- A FUNÇÃO RENAME RENOMEIA OS NOMES DAS TABELAS --
-- AQUI, PRECISAMOS RENOMEAR NOSSA TABELA HISTORICOEMPREGO PARA CARGOSCOLABORADORES. USAREMOS TAMBÉM A INSTRUÇÃO ALTER TABLE, QUE É USADA PARA ALTERAR A ESTRUTURA DE UMA TABELA --
ALTER TABLE HistoricoEmprego RENAME TO CargosColaboradores;

